sudo: required
services:
- docker
env:
  global:
    # Ensure the install happens without prompts
    - CLOUDSDK_CORE_DISABLE_PROMPTS=1
language: node_js
node_js:
- '6'

cache:
  directories:
  - node_modules # NPM packages

before_install:
- curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
- chmod +x ./kubectl
- sudo mv ./kubectl /usr/local/bin/kubectl
- docker run --name mongo -p 27017:27017 -d mongo:3.2
- docker run --name redis -p 6379:6379 -d redis:3.0
- sleep 5s
- docker exec $(docker ps -aqf "name=mongo") mongo _GLOBAL --eval "db.getCollection('_Settings').insertOne({secureKey:'1227d1c4-1385-4d5f-ae73-23e99f74b006',clusterKey:'1227d1c4-1385-4d5f-ae73-23e99f74b006',myURL:'http://localhost:4730'});"

install:
- npm install grunt-cli -g
- npm install eslint -g
- npm install
- docker build -t cloudboost/cloudboost:2.0.$TRAVIS_BUILD_NUMBER .
- if [ "$TRAVIS_BRANCH" == "release" ]; then
    docker tag cloudboost/cloudboost:2.0.$TRAVIS_BUILD_NUMBER cloudboost/cloudboost:latest;
  fi
- if [ "$TRAVIS_BRANCH" == "master" ]; then
    docker tag cloudboost/cloudboost:2.0.$TRAVIS_BUILD_NUMBER cloudboost/cloudboost:master-2.0.$TRAVIS_BUILD_NUMBER;
  fi
- docker run --name cloudboost
    -e  ANALYTICS_URL=$ANALYTICS_URL
    -e  ANALYTICS_KEY=$ANALYTICS_KEY
    -e  LOGGLY_TOKEN=$LOGGLY_TOKEN
    -e  LOGGLY_SUBDOMAIN=$LOGGLY_SUBDOMAIN
    -e  LOGGLY_TAGS=$LOGGLY_TAGS
    -e  MAIL_PROVIDER_API_KEY=$MAIL_PROVIDER_API_KEY
    -e  DOMAIN=$DOMAIN
    -e  FROM_EMAIL=$FROM_EMAIL
    -e  FROM_NAME=$FROM_NAME
    -p 4730:4730 -it --link redis:redis --link mongo:mongo -d cloudboost/cloudboost:2.0.$TRAVIS_BUILD_NUMBER
- sleep 5s
- docker logs cloudboost
- webpack
- grunt

after_success:
- if [ "$TRAVIS_BRANCH" == "master" ]; then
    echo "$DOCKERPASSWORD" | docker login -u "$DOCKERUSERNAME" --password-stdin;
    docker push cloudboost/cloudboost:master-2.0.$TRAVIS_BUILD_NUMBER;
    git clone https://github.com/CloudBoost/kube-cred.git;
    cd kube-cred;
    openssl enc -in config.enc -out config -d -aes256 -k $KUBE_ENC;
    mkdir ~/.kube;
    mv config ~/.kube/;
    kubectl config use-context cloudboost-staging;
    kubectl set image deployment cloudboost-api cloudboost-api=cloudboost/cloudboost:master-2.0.$TRAVIS_BUILD_NUMBER;
    kubectl rollout status deployment cloudboost-api;
  fi
- if [ "$TRAVIS_BRANCH" == "release" ]; then
    echo "$DOCKERPASSWORD" | docker login -u "$DOCKERUSERNAME" --password-stdin;
    docker push cloudboost/cloudboost:2.0.$TRAVIS_BUILD_NUMBER;
    docker push cloudboost/cloudboost:latest;
    git clone https://github.com/CloudBoost/kube-cred.git;
    cd kube-cred;
    openssl enc -in config.enc -out config -d -aes256 -k $KUBE_ENC;
    mkdir ~/.kube;
    mv config ~/.kube/;
    kubectl config use-context cb-productionmgmt;
    kubectl rolling-update cloudboost-api --image=cloudboost/cloudboost:2.0.$TRAVIS_BUILD_NUMBER --image-pull-policy=Always;
    cd sdk;
    npm install;
    npm set init.author.name $NPM_USERNAME;
    npm set init.author.email $NPM_EMAIL;
    npm set init.author.url "https://cloudboost.io";
    npm --no-git-tag-version version 2.0.$TRAVIS_BUILD_NUMBER --force;
    echo -e "$NPM_USERNAME\n$NPM_PASSWORD\n$NPM_EMAIL" | npm login;
    sleep 10s;
    npm publish;
  fi

before_deploy:
  - git config --global user.email "builds@travis-ci.com"
  - git config --global user.name "Travis CI"
  - export GIT_TAG=2.0.$TRAVIS_BUILD_NUMBER
  - git tag $GIT_TAG -a -m "Generated tag from TravisCI for build $TRAVIS_BUILD_NUMBER"
  - git push -q https://$GITLOGIN@github.com/CloudBoost/cloudboost --tags

deploy:
  provider: releases
  api_key: $GH_TOKEN
  file: "README.md"
  skip_cleanup: true
  on:
    tags: false
    branch: release
#Notify Team on Slack
notifications:
  slack: hackerbaycompany:gm7nWJDLDtBRyF75VKLKOoMW
